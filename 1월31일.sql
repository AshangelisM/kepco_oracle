--1월 31일

SELECT SAL,
        TO_CHAR(SAL, '$999,999') AS SAL_$,
        TO_CHAR(SAL, 'L999,999') AS SAL_L,
        TO_CHAR(SAL, '999,999.00') AS SAL_1,
        TO_CHAR(SAL, '000,999,999.00') AS SAL_2,
        TO_CHAR(SAL, '000999999.99') AS SAL_3,
        TO_CHAR(SAL, '999,999,00') AS SAL_4
    FROM EMP;

SELECT 1300 - '1500', '1300' + 1500
    FROM DUAL;
    
SELECT '1,300' - '1,500'
    FROM DUAL;
    
SELECT TO_NUMBER('1,300', '999,999') - TO_NUMBER('1,500', '999,999') AS TO_NUMBER
    FROM DUAL;

SELECT TO_DATE('31/01/2023', 'DD-MM-YYYY') AS TODATE1,
        TO_DATE('20230131', 'YYYY-MM-DD') AS TODATE2
    FROM DUAL;
    
SELECT *
    FROM EMP
    WHERE HIREDATE > '1981/06/01';
    
SELECT EMPNO, ENAME, SAL, COMM, SAL+COMM,
        NVL(COMM, 0) AS COMM_REAL,
        SAL * 12 + NVL(COMM, 0) AS TOTAL_SAL
    FROM EMP;

SELECT EMPNO, ENAME, COMM,
        NVL2(COMM, 'O', 'X') AS COMM_YN,
        NVL2(COMM, SAL*12+COMM, SAL*12) AS ANNSAL
    FROM EMP;

SELECT EMPNO, ENAME, JOB, SAL,
        DECODE(JOB,
                'MANAGER', SAL*1.1,
                'SALESMAN', SAL*1.05,
                'ANALYST', SAL,
                SAL*1.03) AS UPSAL
    FROM EMP;
    
SELECT EMPNO, ENAME, JOB, SAL,
    CASE JOB
        WHEN 'MANAGER' THEN SAL*1.1
        WHEN 'SALESMAN' THEN SAL*1.05
        WHEN 'ANALYST' THEN SAL
        ELSE SAL*1.03
    END AS UPSAL
    FROM EMP;
    
SELECT EMPNO, ENAME, COMM,
        CASE
            WHEN COMM IS NULL THEN '해당없음'
            WHEN COMM = 0 THEN '수당없음'
            WHEN COMM > 0 THEN '수당 : ' || COMM
        END AS COMM_TEXT
    FROM EMP;

SELECT SUM(SAL)
    FROM EMP;
    
SELECT 
    SUM(DISTINCT SAL),
    SUM(ALL SAL),
    SUM(SAL)
    FROM EMP;
    
SELECT 
    COUNT(DISTINCT SAL),
    COUNT(ALL SAL),
    COUNT(SAL)
    FROM EMP;

SELECT COUNT(*) FROM EMP;

SELECT MIN(SAL)
    FROM EMP
    WHERE DEPTNO = 20;
    
SELECT MAX(HIREDATE)
    FROM EMP;
    
SELECT ROUND(AVG(SAL)), DEPTNO
    FROM EMP
    GROUP BY DEPTNO;
    
SELECT DEPTNO, JOB, AVG(SAL)
    FROM EMP
    GROUP BY DEPTNO, JOB
    ORDER BY DEPTNO, JOB DESC;
    
SELECT DEPTNO, JOB, AVG(SAL)
    FROM EMP 
    WHERE SAL <= 3000
        GROUP BY DEPTNO, JOB
            HAVING AVG(SAL) >= 2000
        ORDER BY DEPTNO, JOB;
        
SELECT *
    FROM EMP, DEPT
    ORDER BY EMPNO;
    
SELECT COUNT(*) FROM EMP;
SELECT COUNT(*) FROM DEPT;

--경우의 수 : 4 X 14 = 56 행의 값이 도출됨

SELECT *
    FROM EMP, DEPT
        WHERE EMP.DEPTNO = DEPT.DEPTNO
        ORDER BY EMPNO;

SELECT *
    FROM EMP E, DEPT D
        WHERE E.DEPTNO = D.DEPTNO
        ORDER BY EMPNO;
        
SELECT E.EMPNO, E.ENAME, E.SAL, D.DEPTNO, D.DNAME, D.LOC
    FROM EMP E, DEPT D
        WHERE E.DEPTNO = D.DEPTNO
            AND SAL >= 3000;
            
SELECT *
    FROM EMP E, SALGRADE S
        WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;
        
SELECT E1.EMPNO, E1.ENAME, E1.MGR,
          E2.EMPNO AS MGR_EMPNO,
          E2.ENAME AS MGR_ENAME
    FROM EMP E1, EMP E2
        WHERE E1.MGR = E2. EMPNO(+);
        
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM,
            DEPTNO, D.DNAME, D.LOC
        FROM EMP E NATURAL JOIN DEPT D;
        
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM,
            DEPTNO, D.DNAME, D.LOC
        FROM EMP E JOIN DEPT D USING (DEPTNO)
            WHERE SAL >= 3000
            ORDER BY DEPTNO, E.EMPNO;
            
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM,
            E.DEPTNO, 
            D.DNAME, D.LOC
        FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO)
            WHERE SAL <= 3000
            ORDER BY E.DEPTNO, EMPNO;
            
SELECT E1.EMPNO, E1.ENAME, E1.MGR,
          E2.EMPNO AS MGR_EMPNO,
          E2.ENAME AS MGR_ENAME
    FROM EMP E1 LEFT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
    ORDER BY E1.EMPNO;
    
SELECT E1.EMPNO, E1.ENAME, E1.MGR,
          E2.EMPNO AS MGR_EMPNO,
          E2.ENAME AS MGR_ENAME
    FROM EMP E1 RIGHT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
    ORDER BY E1.EMPNO;
    
SELECT E1.EMPNO, E1.ENAME, E1.MGR,
          E2.EMPNO AS MGR_EMPNO,
          E2.ENAME AS MGR_ENAME
    FROM EMP E1 FULL OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
    ORDER BY E1.EMPNO;
    
SELECT E1.EMPNO, E1.ENAME, E1.DEPTNO, D.DEPTNO, D.DNAME, D.LOC,
          E1.MGR, E2.EMPNO, E2.ENAME
    FROM EMP E1 LEFT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
    JOIN DEPT D ON (E1.DEPTNO = D.DEPTNO);
    
SELECT ENAME, SAL
    FROM EMP
    WHERE SAL > ( SELECT SAL FROM EMP WHERE ENAME = 'JONES' );
    
SELECT *
    FROM EMP
        WHERE HIREDATE < (SELECT HIREDATE FROM EMP WHERE ENAME = 'SCOTT');
        
SELECT E.EMPNO, E.ENAME, E.JOB, E.SAL, D.DEPTNO, D.DNAME, D.LOC
    FROM EMP E, DEPT D
        WHERE E.DEPTNO = D.DEPTNO
            AND E.DEPTNO = 20
            AND E.SAL > (SELECT AVG(SAL) FROM EMP);

SELECT *
    FROM EMP
        WHERE SAL IN (SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO);
        
SELECT *
    FROM EMP
        WHERE SAL > ANY (SELECT SAL FROM EMP WHERE DEPTNO = 30)
        ORDER BY SAL, EMPNO;
        
SELECT *
    FROM EMP
        WHERE EXISTS (SELECT DNAME FROM DEPT WHERE DEPTNO = 10);
        
SELECT *
    FROM EMP
        WHERE (DEPTNO, SAL) IN (SELECT DEPTNO, MAX(SAL) FROM EMP GROUP BY DEPTNO);

SELECT E10.EMPNO, E10.ENAME, E10.DEPTNO, D.DNAME, D.LOC